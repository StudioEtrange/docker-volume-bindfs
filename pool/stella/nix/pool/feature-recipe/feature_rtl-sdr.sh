if [ ! "$_rtlsdr_INCLUDED_" = "1" ]; then
_rtlsdr_INCLUDED_=1


feature_rtl-sdr() {
	FEAT_NAME=rtl-sdr
	FEAT_LIST_SCHEMA="SNAPSHOT:source 0_5_3:source"
	FEAT_DEFAULT_ARCH=
	FEAT_DEFAULT_FLAVOUR="source"
}




feature_rtl-sdr_SNAPSHOT() {
	FEAT_VERSION=SNAPSHOT


	FEAT_SOURCE_DEPENDENCIES="libusb"
	FEAT_BINARY_DEPENDENCIES=

	FEAT_SOURCE_URL=https://git.osmocom.org/rtl-sdr
	FEAT_SOURCE_URL_FILENAME=
	FEAT_SOURCE_URL_PROTOCOL=GIT

	FEAT_BINARY_URL=
	FEAT_BINARY_URL_FILENAME=
	FEAT_BINARY_URL_PROTOCOL=

	FEAT_SOURCE_CALLBACK=feature_rtl-sdr_link
	FEAT_BINARY_CALLBACK=
	FEAT_ENV_CALLBACK=

	FEAT_INSTALL_TEST="$FEAT_INSTALL_ROOT"/bin/rtl_sdr
	FEAT_SEARCH_PATH="$FEAT_INSTALL_ROOT"/bin

	FEAT_GIT_TAG="master"
}


feature_rtl-sdr_0_5_3() {
	FEAT_VERSION=0_5_3


	FEAT_SOURCE_DEPENDENCIES="libusb"
	FEAT_BINARY_DEPENDENCIES=

	FEAT_SOURCE_URL=https://git.osmocom.org/rtl-sdr/snapshot/rtl-sdr-0.5.3.tar.gz
	FEAT_SOURCE_URL_FILENAME=rtl-sdr-0.5.3.tar.gz
	FEAT_SOURCE_URL_PROTOCOL=HTTP_ZIP

	FEAT_BINARY_URL=
	FEAT_BINARY_URL_FILENAME=
	FEAT_BINARY_URL_PROTOCOL=

	FEAT_SOURCE_CALLBACK=feature_rtl-sdr_link
	FEAT_BINARY_CALLBACK=
	FEAT_ENV_CALLBACK=

	FEAT_INSTALL_TEST="$FEAT_INSTALL_ROOT"/bin/rtl_sdr
	FEAT_SEARCH_PATH="$FEAT_INSTALL_ROOT"/bin

}


feature_rtl-sdr_link() {
	__link_feature_library "libusb" "FORCE_DYNAMIC USE_PKG_CONFIG"

}


feature_rtl-sdr_install_source() {
	INSTALL_DIR="$FEAT_INSTALL_ROOT"
	SRC_DIR="$STELLA_APP_FEATURE_ROOT/$FEAT_NAME-$FEAT_VERSION-src"


	__get_resource "$FEAT_NAME" "$FEAT_SOURCE_URL" "$FEAT_SOURCE_URL_PROTOCOL" "$SRC_DIR" "STRIP DEST_ERASE VERSION $FEAT_GIT_TAG"

	__set_toolset "NINJA"


	#__get_resource "$FEAT_NAME" "$FEAT_SOURCE_URL" "$FEAT_SOURCE_URL_PROTOCOL" "$SRC_DIR" "DEST_ERASE STRIP FORCE_NAME $FEAT_SOURCE_URL_FILENAME"

	AUTO_INSTALL_CONF_FLAG_PREFIX=
	#AUTO_INSTALL_CONF_FLAG_POSTFIX="--disable-dependency-tracking"
	AUTO_INSTALL_CONF_FLAG_POSTFIX=
	AUTO_INSTALL_BUILD_FLAG_PREFIX=
	AUTO_INSTALL_BUILD_FLAG_POSTFIX=

	__feature_callback

	__auto_build "$FEAT_NAME" "$SRC_DIR" "$INSTALL_DIR"




}


fi
